{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/app-state.service\";\nimport * as i2 from \"../services/loading.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nfunction NavbarComponent_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function NavbarComponent_li_2_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const action_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.setCurrentAction(action_r2));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelement(3, \"i\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const action_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(action_r2 == ctx_r0.currentAction ? \"btn btn-success ms-1\" : \"btn btn-outline-success ms-1\");\n    i0.ɵɵpropertyInterpolate(\"routerLink\", action_r2.route);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", action_r2.title, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMapInterpolate1(\"bi bi-\", action_r2.icon, \"\");\n  }\n}\nfunction NavbarComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵelement(1, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n}\nexport class NavbarComponent {\n  constructor(appState, loadingService) {\n    this.appState = appState;\n    this.loadingService = loadingService;\n    this.actions = [{\n      title: \"Home\",\n      \"route\": \"/home\",\n      icon: \"house\"\n    }, {\n      title: \"Products\",\n      \"route\": \"/products\",\n      icon: \"search\"\n    }, {\n      title: \"New Product\",\n      \"route\": \"/newProduct\",\n      icon: \"safe\"\n    }];\n    this.isLaoding = false;\n    this.loadingService.isLoading$.subscribe({\n      next: value => {\n        this.isLaoding = value;\n      }\n    });\n  }\n  setCurrentAction(action) {\n    this.currentAction = action;\n  }\n}\nNavbarComponent.ɵfac = function NavbarComponent_Factory(t) {\n  return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.AppStateService), i0.ɵɵdirectiveInject(i2.LoadingService));\n};\nNavbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NavbarComponent,\n  selectors: [[\"app-navbar\"]],\n  decls: 4,\n  vars: 2,\n  consts: [[1, \"p-3\"], [1, \"nav\", \"nav-pills\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [3, \"routerLink\", \"click\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\", \"ms-2\"]],\n  template: function NavbarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"nav\", 0)(1, \"ul\", 1);\n      i0.ɵɵtemplate(2, NavbarComponent_li_2_Template, 4, 7, \"li\", 2);\n      i0.ɵɵtemplate(3, NavbarComponent_li_3_Template, 2, 0, \"li\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.actions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLaoding == true);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAEMA,0BAAmC;IAE/BA;MAAA;MAAA;MAAA;MAAA,OAASA,iDAAwB;IAAA,EAAC;IAKlCA,YACA;IAAAA,oBAAsC;IACxCA,iBAAS;;;;;IALPA,eACwD;IADxDA,0GACwD;IAFxDA,uDAA6B;IAI7BA,eACA;IADAA,gDACA;IAAGA,eAA6B;IAA7BA,uDAA6B;;;;;IAGpCA,0BAA6B;IAC7BA,yBAAkE;IAAAA,iBAAK;;;ACJ7E,OAAM,MAAOC,eAAe;EAQ5BC,YAAmBC,QAAwB,EAAQC,cAA6B;IAA7D,aAAQ,GAARD,QAAQ;IAAwB,mBAAc,GAAdC,cAAc;IAP/D,YAAO,GAAe,CACpB;MAACC,KAAK,EAAE,MAAM;MAAE,OAAO,EAAC,OAAO;MAAEC,IAAI,EAAG;IAAO,CAAC,EAChD;MAACD,KAAK,EAAE,UAAU;MAAE,OAAO,EAAC,WAAW;MAAEC,IAAI,EAAG;IAAQ,CAAC,EACzD;MAACD,KAAK,EAAE,aAAa;MAAE,OAAO,EAAC,aAAa;MAAEC,IAAI,EAAG;IAAM,CAAC,CAC7D;IAEM,cAAS,GAAU,KAAK;IAE/B,IAAI,CAACF,cAAc,CAACG,UAAU,CAACC,SAAS,CAAC;MACvCC,IAAI,EAAEC,KAAK,IAAG;QACZ,IAAI,CAACC,SAAS,GAACD,KAAK;MACtB;KACD,CAAC;EACJ;EACEE,gBAAgB,CAACC,MAAW;IAC1B,IAAI,CAACC,aAAa,GAAGD,MAAM;EAC7B;;AAjBWZ,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV5BnB,8BAAiB;MAEXA,8DAUK;MACLA,8DACuE;MACzEA,iBAAK;;;MAboBA,eAAU;MAAVA,qCAAU;MAW5BA,eAAqB;MAArBA,4CAAqB","names":["i0","NavbarComponent","constructor","appState","loadingService","title","icon","isLoading$","subscribe","next","value","isLaoding","setCurrentAction","action","currentAction","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\AN\\angular-total-part1\\src\\app\\navbar\\navbar.component.html","C:\\Users\\User\\Desktop\\AN\\angular-total-part1\\src\\app\\navbar\\navbar.component.ts"],"sourcesContent":["<nav class=\"p-3\">\n    <ul class=\"nav nav-pills\">\n      <li *ngFor=\"let action of actions\">\n        <button\n          (click)=\"setCurrentAction(action)\"\n          routerLink=\"{{action.route}}\"\n          [class]=\"action==currentAction\n          ?'btn btn-success ms-1': 'btn btn-outline-success ms-1'\"\n        >\n          {{action.title}}\n          <i class=\"bi bi-{{action.icon}}\" ></i>\n        </button>\n      </li>\n      <li *ngIf=\"isLaoding==true\" >\n      <div class=\"spinner-border text-primary ms-2\" role=\"status\"></div></li>\n    </ul>\n  </nav>","import { Component } from '@angular/core';\nimport { __values } from 'tslib';\nimport { AppStateService } from '../services/app-state.service';\nimport { LoadingService } from '../services/loading.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n  actions : Array<any> =[\n    {title :\"Home\", \"route\":\"/home\", icon : \"house\"},\n    {title :\"Products\", \"route\":\"/products\", icon : \"search\"},\n    {title :\"New Product\", \"route\":\"/newProduct\", icon : \"safe\"}\n  ];\n  currentAction :any;\n  public isLaoding :boolean=false;\nconstructor(public appState:AppStateService,public loadingService:LoadingService){\n  this.loadingService.isLoading$.subscribe({\n    next:(value)=>{\n      this.isLaoding=value;\n    }\n  })\n}\n  setCurrentAction(action: any) {\n    this.currentAction = action;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}